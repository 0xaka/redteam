## mariadb 

version: '3.1'

services:

  mariadb:
    image: mariadb:10.2
    container_name: mariadb
    restart: always
    networks:
      - oxaka-dock-network
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=redteam
      #- MYSQL_RANDOM_ROOT_PASSWORD=yes
      - MARIADB_USER=gogs
      - MARIADB_PASSWORD=gogs
      - MARIADB_DATABASE=gogs
    volumes:
      - 'mariadb_data:/var/lib/mysql'

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
     #- PMA_ARBITRARY=1
     - PMA_HOST=mariadb
    depends_on:
      - mariadb
    restart: always
    networks:
      - oxaka-dock-network
    ports:
      - 81:80
    volumes:
      - 'phpmyadmin_data:/sessions'
      #- 'phpmyadmin_data/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php'
   
  gogs:
     image: gogs/gogs
     container_name: gogs
     depends_on:
       - mariadb
     restart: always
     ports:
       - 3000:3000
       - "2222:22"
     networks:
       - oxaka-dock-network
     volumes:
       - 'gogs_data:/data'
       
  mediawiki:
    image: mediawiki
    container_name: mediawiki
    restart: always
    depends_on:
      - mariadb
    ports:
      - 82:80
    networks:
      - oxaka-dock-network
    volumes:
      - 'mw_data:/var/www/html/images'
      # After initial setup, download LocalSettings.php to the same directory as
      # this yaml and uncomment the following line and use compose to restart
      # the mediawiki service
      # - ./LocalSettings.php:/var/www/html/LocalSettings.php
  wordpress:
    image: wordpress
    container_name: wordpress
    restart: always
    depends_on:
      - mariadb
    ports:
      - 83:80
    networks:
      - oxaka-dock-network
    volumes:
      - wp_data:/var/www/html/wp-content
    environment:
      WORDPRESS_DB_PASSWORD: example
      
  prestashop:
    image: prestashop/prestashop
    container_name: prestashop
    restart: always
    depends_on:
      - mariadb
    ports:
      - 83:80
    networks:
      - oxaka-dock-network
    volumes:
      - wp_data:/var/www/html/wp-content
    environment:
      PS_DEV_MODE: # The constant _PS_MODE_DEV_ will be set at true (default value: 0)
      PS_HOST_MODE: # The constant _PS_HOST_MODE_ will be set at true. Usefull to simulate a PrestaShop Cloud environment. (default value: 0)
      DB_SERVER: # If set, the external MySQL database will be used instead of the volatile internal one (default value: localhost)
      DB_USER: # Override default MySQL user (default value: root)
      DB_PASSWD: # Override default MySQL password (default value: admin)
      DB_PREFIX: # Override default tables prefix (default value: ps_)
      DB_NAME: # Override default database name (default value: prestashop)
      PS_INSTALL_AUTO=1: # The installation will be executed. Useful to initialize your image faster. In some configurations, you may need to set PS_DOMAIN or PS_HANDLE_DYNAMIC_DOMAIN as well. (Please note that PrestaShop can be installed automatically from PS 1.5)
      PS_ERASE_DB: # Only with PS_INSTALL_AUTO=1. Drop and create the mysql database. All previous mysql data will be lost (default value: 0)
      PS_DOMAIN: # When installing automatically your shop, you can tell the shop how it will be reached. For advanced users only (no default value)
      PS_LANGUAGE: # Change the default language installed with PrestaShop (default value: en)
      PS_COUNTRY: # Change the default country installed with PrestaShop (default value: gb)
      PS_FOLDER_ADMIN: # Change the name of the admin folder (default value: admin. But will be automatically changed later)
      PS_FOLDER_INSTALL: # Change the name of the install folder (default value: install. But must be changed anyway later)

   
volumes:
  mariadb_data:
    driver: local
  phpmyadmin_data:
    driver: local
  gogs_data:
    driver: local
  wp_data:
    driver: local
  ps_data:
    driver: local
  mw_data:
    driver: local
    
networks:
  oxaka-dock-network:
    driver: bridge
    
## One liner to stop / remove all of Docker containers:
# docker stop $(docker ps -a -q)
# docker rm $(docker ps -a -q)
# docker-compose rm -v # force remove mariadb password 
## wikimedia

## wordpress

## jenkins

## wordpress

## kali linux
